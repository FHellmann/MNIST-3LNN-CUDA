<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?fileVersion 4.0.0?><cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
	<storageModule moduleId="org.eclipse.cdt.core.settings">
		<cconfiguration id="com.nvidia.cuda.ide.on_path.configuration.debug.1666335649">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.ide.on_path.configuration.debug.1666335649" moduleId="org.eclipse.cdt.core.settings" name="trainer-Debug">
				<externalSettings/>
				<extensions>
					<extension id="com.nvidia.cuda.ide.elf" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.cubin" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.macho" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.VCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="nvcc.errorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="trainLindNet" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug" cleanCommand="rm -rf" description="" id="com.nvidia.cuda.ide.on_path.configuration.debug.1666335649" name="trainer-Debug" parent="com.nvidia.cuda.ide.on_path.configuration.debug">
					<folderInfo id="com.nvidia.cuda.ide.on_path.configuration.debug.1666335649." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.tools.toolchain.on_path.exe.debug.1397756897" name="CUDA Toolkit on the path" superClass="com.nvidia.cuda.tools.toolchain.on_path.exe.debug">
							<targetPlatform archList="all" binaryParser="com.nvidia.cuda.ide.elf;com.nvidia.cuda.ide.macho;com.nvidia.cuda.ide.cubin" id="com.nvidia.cuda.ide.targetPlatform.329562718" isAbstract="false" name="Debug Platform" osList="linux,macosx" superClass="com.nvidia.cuda.ide.targetPlatform"/>
							<builder buildPath="${workspace_loc:/MNIST-3LNN-CUDA}/Debug" id="com.nvidia.cuda.ide.builder.1340191935" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CUDA Toolkit 8.0 Builder" superClass="com.nvidia.cuda.ide.builder"/>
							<tool command="nvcc" commandLinePattern="${COMMAND} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX} ${OUTPUT} ${INPUTS}" id="nvcc.compiler.base.795485735" name="NVCC Compiler" superClass="nvcc.compiler.base">
								<option id="nvcc.compiler.deviceDebug.1396689003" name="Generate device debug information (-G)" superClass="nvcc.compiler.deviceDebug" value="true" valueType="boolean"/>
								<option id="nvcc.compiler.option.level.1208012615" name="Generate host debug information (-g)" superClass="nvcc.compiler.option.level" value="true" valueType="boolean"/>
								<option defaultValue="nvcc.compiler.optimization.level.none" id="nvcc.compiler.optimization.level.1126881222" name="Optimization Level" superClass="nvcc.compiler.optimization.level" valueType="enumerated"/>
								<option id="nvcc.compiler.pic.72337597" name="Position Independent Code (-fPIC)" superClass="nvcc.compiler.pic"/>
								<option id="nvcc.compiler.cpp11option.1629333431" name="Enable C++11 support (-std=c++11)" superClass="nvcc.compiler.cpp11option" value="true" valueType="boolean"/>
								<option id="com.nvidia.cuda.ide.build.option1.785642592" name="Compiler Path (-ccbin)" superClass="com.nvidia.cuda.ide.build.option1" value="" valueType="string"/>
								<option id="nvcc.compiler.include.paths.1248565900" name="Include paths (-I)" superClass="nvcc.compiler.include.paths" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/MNIST-3LNN-CUDA}&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/MNIST-3LNN-CUDA/yaml-cpp/include}&quot;"/>
								</option>
								<option id="nvcc.compiler.def.symbols.473290650" name="Defined symbols (-D)" superClass="nvcc.compiler.def.symbols" valueType="definedSymbols">
									<listOptionValue builtIn="false" value="__cplusplus=201103L"/>
								</option>
								<option id="nvcc.compiler.compileroptions.811500626" name="Preprocessor options (-Xcompiler)" superClass="nvcc.compiler.compileroptions" valueType="stringList">
									<listOptionValue builtIn="false" value="-fopenmp"/>
								</option>
								<inputType id="nvcc.compiler.input.cu.1527245790" superClass="nvcc.compiler.input.cu"/>
								<inputType id="nvcc.compiler.input.cpp.631074203" superClass="nvcc.compiler.input.cpp"/>
								<inputType id="nvcc.compiler.input.c.389341790" superClass="nvcc.compiler.input.c"/>
							</tool>
							<tool id="nvcc.linker.base.890508319" name="NVCC Linker" superClass="nvcc.linker.base">
								<option id="nvcc.linker.option.libs.292909493" name="Libraries (-l)" superClass="nvcc.linker.option.libs" valueType="libs">
									<listOptionValue builtIn="false" value="opencv_core"/>
									<listOptionValue builtIn="false" value="gomp"/>
									<listOptionValue builtIn="false" value="opencv_highgui"/>
									<listOptionValue builtIn="false" value="yaml-cpp"/>
								</option>
								<option id="nvcc.linker.option.paths.1628634146" name="Library search path (-L)" superClass="nvcc.linker.option.paths" valueType="libPaths">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/MNIST-3LNN-CUDA/yaml-cpp/build}&quot;"/>
								</option>
								<inputType id="nvcc.linker.input.1603863427" superClass="nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.base.734358929" name="NVCC Archiver" superClass="nvcc.archiver.base"/>
							<tool id="com.nvidia.host.assembler.431818954" name="Host Assembler" superClass="com.nvidia.host.assembler">
								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.731161242" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
							</tool>
						</toolChain>
					</folderInfo>
					<sourceEntries>
						<entry excluding="src/queryLindNet.cpp|yaml-cpp" flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name=""/>
					</sourceEntries>
				</configuration>
			</storageModule>
			<storageModule moduleId="com.nvidia.cuda.ide.build.project.ICudaProjectConfiguration">
				<executable devicelink="false">
					<sass major="6" minor="0"/>
					<ptx major="6" minor="0"/>
				</executable>
				<editor-arch major="6" minor="0"/>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
		<cconfiguration id="com.nvidia.cuda.ide.on_path.configuration.release.1554113613">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.ide.on_path.configuration.release.1554113613" moduleId="org.eclipse.cdt.core.settings" name="trainer-Release">
				<externalSettings/>
				<extensions>
					<extension id="com.nvidia.cuda.ide.elf" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.cubin" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.macho" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.VCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="nvcc.errorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="trainLindNet" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release" cleanCommand="rm -rf" description="" id="com.nvidia.cuda.ide.on_path.configuration.release.1554113613" name="trainer-Release" parent="com.nvidia.cuda.ide.on_path.configuration.release">
					<folderInfo id="com.nvidia.cuda.ide.on_path.configuration.release.1554113613." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.ide.toolchain.on_path.exe.release.1068910873" name="CUDA Toolkit on the path" superClass="com.nvidia.cuda.ide.toolchain.on_path.exe.release">
							<targetPlatform archList="all" binaryParser="com.nvidia.cuda.ide.elf;com.nvidia.cuda.ide.macho;com.nvidia.cuda.ide.cubin" id="com.nvidia.cuda.ide.targetPlatform.399865068" isAbstract="false" name="Debug Platform" osList="linux,macosx" superClass="com.nvidia.cuda.ide.targetPlatform"/>
							<builder buildPath="${workspace_loc:/MNIST-3LNN-CUDA}/Release" id="com.nvidia.cuda.ide.builder.570596752" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CUDA Toolkit 8.0 Builder" superClass="com.nvidia.cuda.ide.builder"/>
							<tool command="nvcc" commandLinePattern="${COMMAND} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX} ${OUTPUT} ${INPUTS}" id="nvcc.compiler.base.428191841" name="NVCC Compiler" superClass="nvcc.compiler.base">
								<option id="nvcc.compiler.deviceDebug.456062479" name="Generate device debug information (-G)" superClass="nvcc.compiler.deviceDebug"/>
								<option id="nvcc.compiler.option.level.3605077" name="Generate host debug information (-g)" superClass="nvcc.compiler.option.level"/>
								<option defaultValue="nvcc.compiler.optimization.level.most" id="nvcc.compiler.optimization.level.2087712849" name="Optimization Level" superClass="nvcc.compiler.optimization.level" valueType="enumerated"/>
								<option id="nvcc.compiler.pic.507313475" name="Position Independent Code (-fPIC)" superClass="nvcc.compiler.pic"/>
								<option id="nvcc.compiler.cpp11option.181553428" name="Enable C++11 support (-std=c++11)" superClass="nvcc.compiler.cpp11option" value="true" valueType="boolean"/>
								<option id="com.nvidia.cuda.ide.build.option1.1244854939" name="Compiler Path (-ccbin)" superClass="com.nvidia.cuda.ide.build.option1" value="" valueType="string"/>
								<option id="nvcc.compiler.include.paths.1268936331" name="Include paths (-I)" superClass="nvcc.compiler.include.paths" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/MNIST-3LNN-CUDA}&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/MNIST-3LNN-CUDA/yaml-cpp/include}&quot;"/>
								</option>
								<option id="nvcc.compiler.def.symbols.271816981" name="Defined symbols (-D)" superClass="nvcc.compiler.def.symbols" valueType="definedSymbols">
									<listOptionValue builtIn="false" value="__cplusplus=201103L"/>
								</option>
								<option id="nvcc.compiler.compileroptions.1263680908" name="Preprocessor options (-Xcompiler)" superClass="nvcc.compiler.compileroptions" valueType="stringList">
									<listOptionValue builtIn="false" value="-fopenmp"/>
								</option>
								<inputType id="nvcc.compiler.input.cu.2074622702" superClass="nvcc.compiler.input.cu"/>
								<inputType id="nvcc.compiler.input.cpp.820903444" superClass="nvcc.compiler.input.cpp"/>
								<inputType id="nvcc.compiler.input.c.523683720" superClass="nvcc.compiler.input.c"/>
							</tool>
							<tool id="nvcc.linker.base.965541482" name="NVCC Linker" superClass="nvcc.linker.base">
								<option id="nvcc.linker.option.libs.1527158700" name="Libraries (-l)" superClass="nvcc.linker.option.libs" valueType="libs">
									<listOptionValue builtIn="false" value="opencv_core"/>
									<listOptionValue builtIn="false" value="gomp"/>
									<listOptionValue builtIn="false" value="opencv_highgui"/>
									<listOptionValue builtIn="false" value="yaml-cpp"/>
								</option>
								<option id="nvcc.linker.option.paths.2051864678" name="Library search path (-L)" superClass="nvcc.linker.option.paths" valueType="libPaths">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/MNIST-3LNN-CUDA/yaml-cpp/build}&quot;"/>
								</option>
								<inputType id="nvcc.linker.input.484549813" superClass="nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.base.198202976" name="NVCC Archiver" superClass="nvcc.archiver.base"/>
							<tool id="com.nvidia.host.assembler.1816791262" name="Host Assembler" superClass="com.nvidia.host.assembler">
								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.308616064" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
							</tool>
						</toolChain>
					</folderInfo>
					<sourceEntries>
						<entry excluding="src/queryLindNet.cpp|yaml-cpp" flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name=""/>
					</sourceEntries>
				</configuration>
			</storageModule>
			<storageModule moduleId="com.nvidia.cuda.ide.build.project.ICudaProjectConfiguration">
				<executable devicelink="false">
					<sass major="6" minor="0"/>
					<ptx major="6" minor="0"/>
				</executable>
				<editor-arch major="6" minor="0"/>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
		<cconfiguration id="com.nvidia.cuda.ide.on_path.configuration.debug.1666335649.1464267090">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.ide.on_path.configuration.debug.1666335649.1464267090" moduleId="org.eclipse.cdt.core.settings" name="query-Debug">
				<externalSettings/>
				<extensions>
					<extension id="com.nvidia.cuda.ide.elf" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.cubin" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.macho" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.VCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="nvcc.errorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="queryLindNet" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug" cleanCommand="rm -rf" description="" id="com.nvidia.cuda.ide.on_path.configuration.debug.1666335649.1464267090" name="query-Debug" parent="com.nvidia.cuda.ide.on_path.configuration.debug">
					<folderInfo id="com.nvidia.cuda.ide.on_path.configuration.debug.1666335649.1464267090." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.tools.toolchain.on_path.exe.debug.1865325787" name="CUDA Toolkit on the path" superClass="com.nvidia.cuda.tools.toolchain.on_path.exe.debug">
							<targetPlatform archList="all" binaryParser="com.nvidia.cuda.ide.elf;com.nvidia.cuda.ide.macho;com.nvidia.cuda.ide.cubin" id="com.nvidia.cuda.ide.targetPlatform.404298109" isAbstract="false" name="Debug Platform" osList="linux,macosx" superClass="com.nvidia.cuda.ide.targetPlatform"/>
							<builder buildPath="${workspace_loc:/MNIST-3LNN-CUDA}/Debug" id="com.nvidia.cuda.ide.builder.1722085703" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CUDA Toolkit 8.0 Builder" superClass="com.nvidia.cuda.ide.builder"/>
							<tool command="nvcc" commandLinePattern="${COMMAND} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX} ${OUTPUT} ${INPUTS}" id="nvcc.compiler.base.1411793676" name="NVCC Compiler" superClass="nvcc.compiler.base">
								<option id="nvcc.compiler.deviceDebug.1378038950" name="Generate device debug information (-G)" superClass="nvcc.compiler.deviceDebug" value="true" valueType="boolean"/>
								<option id="nvcc.compiler.option.level.1601266810" name="Generate host debug information (-g)" superClass="nvcc.compiler.option.level" value="true" valueType="boolean"/>
								<option defaultValue="nvcc.compiler.optimization.level.none" id="nvcc.compiler.optimization.level.1418195618" name="Optimization Level" superClass="nvcc.compiler.optimization.level" valueType="enumerated"/>
								<option id="nvcc.compiler.pic.706839033" name="Position Independent Code (-fPIC)" superClass="nvcc.compiler.pic"/>
								<option id="nvcc.compiler.cpp11option.431667387" name="Enable C++11 support (-std=c++11)" superClass="nvcc.compiler.cpp11option" value="true" valueType="boolean"/>
								<option id="com.nvidia.cuda.ide.build.option1.1213911481" name="Compiler Path (-ccbin)" superClass="com.nvidia.cuda.ide.build.option1" value="" valueType="string"/>
								<option id="nvcc.compiler.include.paths.901764169" name="Include paths (-I)" superClass="nvcc.compiler.include.paths" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/MNIST-3LNN-CUDA}&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/MNIST-3LNN-CUDA/yaml-cpp/include}&quot;"/>
								</option>
								<option id="nvcc.compiler.def.symbols.697755076" name="Defined symbols (-D)" superClass="nvcc.compiler.def.symbols" valueType="definedSymbols">
									<listOptionValue builtIn="false" value="__cplusplus=201103L"/>
								</option>
								<option id="nvcc.compiler.compileroptions.1807426989" name="Preprocessor options (-Xcompiler)" superClass="nvcc.compiler.compileroptions" valueType="stringList">
									<listOptionValue builtIn="false" value="-fopenmp"/>
								</option>
								<inputType id="nvcc.compiler.input.cu.1347120078" superClass="nvcc.compiler.input.cu"/>
								<inputType id="nvcc.compiler.input.cpp.579226282" superClass="nvcc.compiler.input.cpp"/>
								<inputType id="nvcc.compiler.input.c.1774115075" superClass="nvcc.compiler.input.c"/>
							</tool>
							<tool id="nvcc.linker.base.1607503486" name="NVCC Linker" superClass="nvcc.linker.base">
								<option id="nvcc.linker.option.libs.506600022" name="Libraries (-l)" superClass="nvcc.linker.option.libs" valueType="libs">
									<listOptionValue builtIn="false" value="opencv_core"/>
									<listOptionValue builtIn="false" value="gomp"/>
									<listOptionValue builtIn="false" value="opencv_highgui"/>
									<listOptionValue builtIn="false" value="yaml-cpp"/>
								</option>
								<option id="nvcc.linker.option.paths.277199136" name="Library search path (-L)" superClass="nvcc.linker.option.paths" valueType="libPaths">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/MNIST-3LNN-CUDA/yaml-cpp/build}&quot;"/>
								</option>
								<inputType id="nvcc.linker.input.998289167" superClass="nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.base.446915784" name="NVCC Archiver" superClass="nvcc.archiver.base"/>
							<tool id="com.nvidia.host.assembler.1847067129" name="Host Assembler" superClass="com.nvidia.host.assembler">
								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.1611911117" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
							</tool>
						</toolChain>
					</folderInfo>
					<sourceEntries>
						<entry excluding="src/trainLindNet.cpp|yaml-cpp" flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name=""/>
					</sourceEntries>
				</configuration>
			</storageModule>
			<storageModule moduleId="com.nvidia.cuda.ide.build.project.ICudaProjectConfiguration">
				<executable devicelink="false">
					<sass major="6" minor="0"/>
					<ptx major="6" minor="0"/>
				</executable>
				<editor-arch major="6" minor="0"/>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
		<cconfiguration id="com.nvidia.cuda.ide.on_path.configuration.release.1554113613.1219068610">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.ide.on_path.configuration.release.1554113613.1219068610" moduleId="org.eclipse.cdt.core.settings" name="query-Release">
				<externalSettings/>
				<extensions>
					<extension id="com.nvidia.cuda.ide.elf" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.cubin" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.macho" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.VCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="nvcc.errorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="queryLindNet" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release" cleanCommand="rm -rf" description="" id="com.nvidia.cuda.ide.on_path.configuration.release.1554113613.1219068610" name="query-Release" parent="com.nvidia.cuda.ide.on_path.configuration.release">
					<folderInfo id="com.nvidia.cuda.ide.on_path.configuration.release.1554113613.1219068610." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.ide.toolchain.on_path.exe.release.2122518729" name="CUDA Toolkit on the path" superClass="com.nvidia.cuda.ide.toolchain.on_path.exe.release">
							<targetPlatform archList="all" binaryParser="com.nvidia.cuda.ide.elf;com.nvidia.cuda.ide.macho;com.nvidia.cuda.ide.cubin" id="com.nvidia.cuda.ide.targetPlatform.1640243086" isAbstract="false" name="Debug Platform" osList="linux,macosx" superClass="com.nvidia.cuda.ide.targetPlatform"/>
							<builder buildPath="${workspace_loc:/MNIST-3LNN-CUDA}/Release" id="com.nvidia.cuda.ide.builder.1935123280" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CUDA Toolkit 8.0 Builder" superClass="com.nvidia.cuda.ide.builder"/>
							<tool id="nvcc.compiler.base.309069518" name="NVCC Compiler" superClass="nvcc.compiler.base">
								<option id="nvcc.compiler.deviceDebug.989777136" name="Generate device debug information (-G)" superClass="nvcc.compiler.deviceDebug"/>
								<option id="nvcc.compiler.option.level.1187183467" name="Generate host debug information (-g)" superClass="nvcc.compiler.option.level"/>
								<option defaultValue="nvcc.compiler.optimization.level.most" id="nvcc.compiler.optimization.level.200393139" name="Optimization Level" superClass="nvcc.compiler.optimization.level" valueType="enumerated"/>
								<option id="nvcc.compiler.pic.307050669" name="Position Independent Code (-fPIC)" superClass="nvcc.compiler.pic"/>
								<option id="nvcc.compiler.cpp11option.1186779622" name="Enable C++11 support (-std=c++11)" superClass="nvcc.compiler.cpp11option" value="true" valueType="boolean"/>
								<option id="com.nvidia.cuda.ide.build.option1.1000382619" name="Compiler Path (-ccbin)" superClass="com.nvidia.cuda.ide.build.option1" value="" valueType="string"/>
								<option id="nvcc.compiler.include.paths.855005963" name="Include paths (-I)" superClass="nvcc.compiler.include.paths" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/MNIST-3LNN-CUDA}&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/MNIST-3LNN-CUDA/yaml-cpp/include}&quot;"/>
								</option>
								<option id="nvcc.compiler.def.symbols.75115265" name="Defined symbols (-D)" superClass="nvcc.compiler.def.symbols" valueType="definedSymbols">
									<listOptionValue builtIn="false" value="__cplusplus=201103L"/>
								</option>
								<option id="nvcc.compiler.compileroptions.2120991079" name="Preprocessor options (-Xcompiler)" superClass="nvcc.compiler.compileroptions" valueType="stringList">
									<listOptionValue builtIn="false" value="-fopenmp"/>
								</option>
								<inputType id="nvcc.compiler.input.cu.2039839043" superClass="nvcc.compiler.input.cu"/>
								<inputType id="nvcc.compiler.input.cpp.1780124361" superClass="nvcc.compiler.input.cpp"/>
								<inputType id="nvcc.compiler.input.c.601940690" superClass="nvcc.compiler.input.c"/>
							</tool>
							<tool id="nvcc.linker.base.1993764303" name="NVCC Linker" superClass="nvcc.linker.base">
								<option id="nvcc.linker.option.libs.606083753" name="Libraries (-l)" superClass="nvcc.linker.option.libs" valueType="libs">
									<listOptionValue builtIn="false" value="opencv_core"/>
									<listOptionValue builtIn="false" value="gomp"/>
									<listOptionValue builtIn="false" value="opencv_highgui"/>
									<listOptionValue builtIn="false" value="yaml-cpp"/>
								</option>
								<option id="nvcc.linker.option.paths.657447327" name="Library search path (-L)" superClass="nvcc.linker.option.paths" valueType="libPaths">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/MNIST-3LNN-CUDA/yaml-cpp/build}&quot;"/>
								</option>
								<inputType id="nvcc.linker.input.1293683296" superClass="nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.base.92015836" name="NVCC Archiver" superClass="nvcc.archiver.base"/>
							<tool id="com.nvidia.host.assembler.1334172256" name="Host Assembler" superClass="com.nvidia.host.assembler">
								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.950931336" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
							</tool>
						</toolChain>
					</folderInfo>
					<sourceEntries>
						<entry excluding="src/trainLindNet.cpp|yaml-cpp" flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name=""/>
					</sourceEntries>
				</configuration>
			</storageModule>
			<storageModule moduleId="com.nvidia.cuda.ide.build.project.ICudaProjectConfiguration">
				<executable devicelink="false">
					<sass major="6" minor="0"/>
					<ptx major="6" minor="0"/>
				</executable>
				<editor-arch major="6" minor="0"/>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
	</storageModule>
	<storageModule moduleId="cdtBuildSystem" version="4.0.0">
		<project id="MNIST-3LNN-CUDA.com.nvidia.cuda.ide.on_path.exe.853724407" name="Executable" projectType="com.nvidia.cuda.ide.on_path.exe"/>
	</storageModule>
	<storageModule moduleId="org.eclipse.cdt.core.LanguageSettingsProviders"/>
	<storageModule moduleId="refreshScope"/>
	<storageModule moduleId="org.eclipse.cdt.internal.ui.text.commentOwnerProjectMappings"/>
	<storageModule moduleId="scannerConfiguration">
		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.on_path.configuration.release.1554113613;com.nvidia.cuda.ide.on_path.configuration.release.1554113613.;nvcc.compiler.base.428191841;nvcc.compiler.input.cu.2074622702">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.on_path.configuration.release.1554113613.1219068610;com.nvidia.cuda.ide.on_path.configuration.release.1554113613.1219068610.;nvcc.compiler.base.309069518;nvcc.compiler.input.cpp.1780124361">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.on_path.configuration.debug.1666335649.1464267090;com.nvidia.cuda.ide.on_path.configuration.debug.1666335649.1464267090.;nvcc.compiler.base.1411793676;nvcc.compiler.input.cpp.579226282">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.on_path.configuration.debug.1666335649;com.nvidia.cuda.ide.on_path.configuration.debug.1666335649.;nvcc.compiler.base.795485735;nvcc.compiler.input.cpp.631074203">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.on_path.configuration.debug.1666335649.1464267090;com.nvidia.cuda.ide.on_path.configuration.debug.1666335649.1464267090.;nvcc.compiler.base.1411793676;nvcc.compiler.input.c.1774115075">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.on_path.configuration.debug.1666335649;com.nvidia.cuda.ide.on_path.configuration.debug.1666335649.;nvcc.compiler.base.795485735;nvcc.compiler.input.c.389341790">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.on_path.configuration.release.1554113613.1219068610;com.nvidia.cuda.ide.on_path.configuration.release.1554113613.1219068610.;nvcc.compiler.base.309069518;nvcc.compiler.input.c.601940690">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.on_path.configuration.release.1554113613;com.nvidia.cuda.ide.on_path.configuration.release.1554113613.;nvcc.compiler.base.428191841;nvcc.compiler.input.cpp.820903444">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.on_path.configuration.release.1554113613.1219068610;com.nvidia.cuda.ide.on_path.configuration.release.1554113613.1219068610.;nvcc.compiler.base.309069518;nvcc.compiler.input.cu.2039839043">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.on_path.configuration.debug.1666335649;com.nvidia.cuda.ide.on_path.configuration.debug.1666335649.;nvcc.compiler.base.795485735;nvcc.compiler.input.cu.1527245790">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.on_path.configuration.debug.1666335649.1464267090;com.nvidia.cuda.ide.on_path.configuration.debug.1666335649.1464267090.;nvcc.compiler.base.1411793676;nvcc.compiler.input.cu.1347120078">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.on_path.configuration.release.1554113613;com.nvidia.cuda.ide.on_path.configuration.release.1554113613.;nvcc.compiler.base.428191841;nvcc.compiler.input.c.523683720">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
	</storageModule>
</cproject>
